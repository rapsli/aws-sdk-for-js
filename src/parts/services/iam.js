function AmazonIAM(access_key,secret_key){
  this.__proto__ = $.extend(this.__proto__,AWS.prototype);
  this.initialize(access_key,secret_key);
}
AmazonIAM.prototype = {
  service:'iam',
  version:'2010-05-08',
  auth_class:'AuthV4Query',
  /**
   * @memberOf AmazonIAM
   */
  initialize : function(access_key,secret_key){
    this.init(access_key,secret_key);
  },

  add_role_to_instance_profile: function(instance_profile_name,role_name){},
  add_user_to_group: function(group_name,user_name){},
  change_password: function(new_password,old_password){},
  create_access_key: function(){},
  create_account_alias: function(account_alias){},
  create_group: function(group_name){},
  create_instance_profile: function(instance_profile_name){},
  create_login_profile: function(password,user_name){},
  create_role: function(assume_role_policy_document,role_name){},
  create_user: function(user_name){},
  create_virtual_mfa_device: function(virtual_mfa_device_name){},
  deactivate_mfa_device: function(serial_number,user_name){},
  delete_access_key: function(access_key_id){},
  delete_account_alias: function(account_alias){},
  delete_account_password_policy: function(){},
  delete_group: function(group_name){},
  delete_group_policy: function(group_name,policy_name){},
  delete_instance_profile: function(instance_profile_name){},
  delete_login_profile: function(user_name){},
  delete_role: function(role_name){},
  delete_role_policy: function(policy_name,role_name){},
  delete_server_certificate: function(server_certificate_name){},
  delete_signing_certificate: function(certificate_id){},
  delete_user: function(user_name){},
  delete_user_policy: function(policy_name,user_name){},
  delete_virtual_mfa_device: function(serial_number){},
  enable_mfa_device: function(authentication_code1,authentication_code2,serial_number,user_name){},
  get_account_password_policy: function(){},
  get_account_summary: function(){},
  get_group: function(group_name){},
  get_group_policy: function(group_name,policy_name){},
  get_instance_profile: function(instance_profile_name){},
  get_login_profile: function(user_name){},
  get_role: function(role_name){},
  get_role_policy: function(policy_name,role_name){},
  get_server_certificate: function(server_certificate_name){},
  get_user: function(){},
  get_user_policy: function(policy_name,user_name){},
  list_access_keys: function(){},
  list_account_aliases: function(){},
  list_group_policies: function(group_name){},
  list_groups: function(){},
  list_groups_for_user: function(user_name){},
  list_instance_profiles: function(){},
  list_instance_profiles_for_role: function(role_name){},
  list_mfa_devices: function(){},
  list_role_policies: function(role_name){},
  list_roles: function(){},
  list_server_certificates: function(){},
  list_signing_certificates: function(){},
  list_user_policies: function(user_name){},
  list_users: function(){},
  list_virtual_mfa_devices: function(){},
  put_group_policy: function(group_name,policy_document,policy_name){},
  put_role_policy: function(policy_document,policy_name,role_name){},
  put_user_policy: function(policy_document,policy_name,user_name){},
  remove_role_from_instance_profile: function(instance_profile_name,role_name){},
  remove_user_from_group: function(group_name,user_name){},
  resync_mfa_device: function(authentication_code1,authentication_code2,serial_number,user_name){},
  update_access_key: function(access_key_id,status){},
  update_account_password_policy: function(){},
  update_assume_role_policy: function(policy_document,role_name){},
  update_group: function(group_name){},
  update_login_profile: function(user_name){},
  update_server_certificate: function(server_certificate_name){},
  update_signing_certificate: function(certificate_id,status){},
  update_user: function(user_name){},
  upload_server_certificate: function(certificate_body,private_key,server_certificate_name){},
  upload_signing_certificate: function(certificate_body){}
}